name: build and deploy a spring boot server application
on:
  push:
    branches:
      - main
env:
  applicationfolder: backend/gfi
  AWS_REGION: ap-northeast-2
  S3_BUCKET: gfi-server
  CODE_DEPLOY_APP_NAME: GoodFirstIssue
  CODE_DEPLOY_GROUP_NAME: GoodFirstIssueDeployGroup

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.applicationfolder }}

    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create a .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "GFI_CLIENT_ID=${{ secrets.GFI_CLIENT_ID }}" >> .env
          echo "GFI_CLIENT_SECRET=${{ secrets.GFI_CLIENT_SECRET }}" >> .env

      - name: Make zip file
        run: zip -r $GITHUB_SHA.zip ./
        shell: bash

      - name: Upload Artifact to s3
        run: aws s3 cp $GITHUB_SHA.zip s3://${{ env.S3_BUCKET }}/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
      - run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APP_NAME }} \
            --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET }},bundleType=zip,key=$GITHUB_SHA.zip
